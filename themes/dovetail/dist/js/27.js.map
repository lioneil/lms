{"version":3,"sources":["webpack:///./src/modules/Page/partials/PageEditor.vue?44e9","webpack:///./src/modules/Page/partials/PageEditor.vue?5865","webpack:///src/modules/Page/partials/PageEditor.vue","webpack:///./src/modules/Page/partials/PageEditor.vue"],"names":["props","data","methods","updateHtml","this","$emit","html","toggleFullScreen","initEditor","editor","canvas","styles","container","$refs","gjs","plugins","DomComponents","addType","isComponent","model","defaults","tagName","draggable","attributes","class","traits","name","droppable","type","placeholder","fromElement","height","width","storageManager","blockManager","appendTo","blocks","layerManager","panels","selectorManager","styleManager","sectors","traitManager","deviceManager","devices","Commands","add","getRowEl","getLayersEl","run","style","display","stop","getStyleEl","getTraitsEl","querySelector","on","content","setComponents","setStyle","css","mounted","component","_h","$createElement","_c","_self","ref","attrs","_m","_v","staticClass"],"mappings":"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","file":"dist/js/27.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"editor-container\",attrs:{\"id\":\"grapes-editor_container\"}},[_vm._m(0),_vm._v(\" \"),_c('div',{staticClass:\"editor-row\"},[_c('div',{staticClass:\"editor-canvas\"},[_c('div',{ref:\"gjs\",attrs:{\"id\":\"gjs\"}})]),_vm._v(\" \"),_vm._m(1)])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"panel__top\"},[_c('div',{staticClass:\"panel__devices\"}),_vm._v(\" \"),_c('div',{staticClass:\"panel__basic-actions\"}),_vm._v(\" \"),_c('div',{staticClass:\"panel__switcher\"})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"panel__right\"},[_c('div',{staticClass:\"layers-container\"}),_vm._v(\" \"),_c('div',{staticClass:\"styles-container\"}),_vm._v(\" \"),_c('div',{staticClass:\"traits-container\"}),_vm._v(\" \"),_c('div',{staticClass:\"blocks-container\"})])}]\n\nexport { render, staticRenderFns }","import mod from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../node_modules/vuetify-loader/lib/loader.js??ref--16-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PageEditor.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../node_modules/vuetify-loader/lib/loader.js??ref--16-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PageEditor.vue?vue&type=script&lang=js&\"","<template>\n  <div ref=\"editor-container\" id=\"grapes-editor_container\">\n    <div class=\"panel__top\">\n      <div class=\"panel__devices\"></div>\n      <div class=\"panel__basic-actions\"></div>\n      <div class=\"panel__switcher\"></div>\n    </div>\n    <div class=\"editor-row\">\n      <div class=\"editor-canvas\">\n        <div ref=\"gjs\" id=\"gjs\"></div>\n      </div>\n      <div class=\"panel__right\">\n        <div class=\"layers-container\"></div>\n        <div class=\"styles-container\"></div>\n        <div class=\"traits-container\"></div>\n        <div class=\"blocks-container\"></div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport grapesjs from 'grapesjs';\n\nexport default {\n  props: ['value'],\n\n  data: () => ({\n    editor: null,\n    init: true,\n  }),\n\n  methods: {\n    updateHtml (html) {\n      this.$emit('input', html)\n    },\n\n    toggleFullScreen () {\n      this.$emit('toggleFullScreen')\n    },\n\n    initEditor() {\n      const { value } = this\n\n      // # Declare custom component types\n      const myNewComponentTypes = editor => {\n        editor.DomComponents.addType('section', {\n          isComponent: el => el.tagName === 'SECTION',\n\n          model: {\n            defaults: {\n              tagName: 'section',\n              draggable: '*',\n              attributes: {\n                class: 'grapesjs-section'\n              },\n              traits: [\n                'id',\n              ],\n            }\n          }\n        });\n        editor.DomComponents.addType('heading', {\n          isComponent: el => el.tagName === 'h1',\n\n          model: {\n            defaults: {\n              tagName: 'div',\n              attributes: {\n                class: 'grapesjs-heading'\n              },\n              traits: [\n                'id',\n              ],\n            }\n          }\n        });\n        editor.DomComponents.addType('form', {\n          isComponent: el => el.tagName === 'FORM',\n\n          model: {\n            defaults: {\n              tagName: 'form',\n              attributes: {\n                name: '',\n                class: 'grapesjs-form'\n              },\n              traits: [\n                'id',\n                'action',\n                'methods'\n              ],\n            }\n          }\n        });\n        editor.DomComponents.addType('input', {\n          // Make the editor understand when to bind `my-input-type`\n          isComponent: el => el.tagName === 'INPUT',\n\n          // Model definition\n          model: {\n            // Default properties\n            defaults: {\n              tagName: 'input',\n              // draggable: 'form, form *', // Can be dropped only inside `form` elements\n              droppable: false, // Can't drop other elements inside\n              attributes: { // Default attributes\n                type: 'text',\n                name: '',\n                placeholder: 'Insert text here',\n                class: 'grapesjs-input'\n              },\n              traits: [\n                'id',\n                'name',\n                'placeholder',\n                {\n                  name: 'type',\n                  type: 'select',\n                  options: [\n                    {value:'text',name:'text'},\n                    {value:'password',name:'password'},\n                    {value:'email',name:'email'},\n                    {value:'number',name:'number'},\n                  ]\n                 },\n                { type: 'checkbox', name: 'required' },\n              ],\n            }\n          }\n        });\n        editor.DomComponents.addType('textarea', {\n          isComponent: el => el.tagName === 'TEXTAREA',\n\n          model: {\n            defaults: {\n              tagName: 'textarea',\n              droppable: false,\n              attributes: {\n                name: 'default-name',\n                placeholder: 'Insert text here',\n                class: 'grapesjs-textarea'\n              },\n              traits: [\n                'id',\n                'name',\n                'placeholder',\n                { type: 'checkbox', name: 'required' },\n              ],\n            }\n          }\n        });\n        editor.DomComponents.addType('radio', {\n          isComponent: el => el.tagName === 'INPUT',\n\n          model: {\n            defaults: {\n              tagName: 'input',\n              droppable: false,\n              attributes: {\n                name: 'default-name',\n                type: 'radio',\n                class: 'grapesjs-radio'\n              },\n              traits: [\n                'id',\n                'name',\n                { type: 'checkbox', name: 'required' },\n              ],\n            }\n          }\n        });\n        editor.DomComponents.addType('checkbox', {\n          isComponent: el => el.tagName === 'INPUT',\n\n          model: {\n            defaults: {\n              tagName: 'input',\n              droppable: false,\n              attributes: {\n                name: 'default-name',\n                type: 'checkbox',\n                class: 'grapesjs-checkbox'\n              },\n              traits: [\n                'id',\n                'name',\n                { type: 'checkbox', name: 'required' },\n              ],\n            }\n          }\n        });\n        editor.DomComponents.addType('select', {\n          isComponent: el => el.tagName === 'SELECT',\n\n          model: {\n            defaults: {\n              tagName: 'select',\n              droppable: 'option',\n              attributes: {\n                name: '',\n                class: 'grapesjs-select',\n              },\n              traits: [\n                'id',\n                'name',\n                { type: 'checkbox', name: 'required' },\n\n              ],\n            },\n          }\n        });\n        editor.DomComponents.addType('option', {\n          isComponent: el => el.tagName === 'OPTION',\n\n          model: {\n            defaults: {\n              tagName: 'option',\n              draggable: 'select',\n              droppable: false,\n              attributes: {\n                name: '',\n                class: 'grapesjs-option',\n              },\n              traits: [\n                'id',\n                'value',\n                'label'\n              ],\n            }\n          }\n        });\n        editor.DomComponents.addType('button', {\n          isComponent: el => el.tagName === 'BUTTON',\n\n          model: {\n            defaults: {\n              tagName: 'button',\n              droppable: '*',\n              attributes: {\n                class: 'grapesjs-button v-btn v-btn--contained v-btn--router v-size--large primary-bg white-text',\n                type: 'button',\n              },\n              traits: [\n                'id',\n                'name',\n                {\n                  name: 'type',\n                  type: 'select',\n                  options: [\n                    {value:'button',name:'button'},\n                    {value:'submit',name:'submit'},\n                    {value:'reset',name:'reset'},\n                  ]\n                 },\n              ],\n            }\n          }\n        });\n      };\n      // # Declare custom component types\n\n      // # Init editor\n      this.editor = grapesjs.init({\n        canvas: {\n          styles: [\n            'https://cdn.jsdelivr.net/npm/vuetify@2.x/dist/vuetify.min.css',\n            window.location.origin + '/theme/dist/css/app.css',\n          ]\n        },\n        // Indicate where to init the editor. You can also pass an HTMLElement\n        container: this.$refs.gjs,\n        // Add the defined types\n        plugins: [ myNewComponentTypes ],\n        // Get the content for the canvas directly from the element\n        // As an alternative we could use: `components: '<h1>Hello World Component!</h1>'`,\n        fromElement: false,\n        // components: value,\n        // Size of the editor\n        height: '100%',\n        width: 'auto',\n        // Disable the storage manager for the moment\n        storageManager: false,\n        // Avoid any default panel\n        // panels: { defaults: [] },\n\n        // Setup blocks\n        blockManager: {\n          appendTo: '.blocks-container',\n          blocks: [\n            {\n              id: 'section', // id is mandatory\n              label: `\n                <div>\n                  <i class=\"mdi mdi-text-subject block-icon\" title=\"Section\" aria-hidden=\"true\"></i><br />\n                  <span>Section</span>\n                </div>\n              `,\n              select: true,\n              category: 'Basic',\n              content: `\n                <section data-gjs-type=\"section\">\n                  <h1 data-gjs-type=\"heading\">This is a simple title</h1>\n                  <div data-gjs-type=\"text\">This is just a Lorem text: Lorem ipsum dolor sit amet</div>\n                </section>`\n            },\n            {\n              id: 'text',\n              label: `\n                <div>\n                  <i class=\"mdi mdi-text-short block-icon\" title=\"Text\" aria-hidden=\"true\"></i><br />\n                  <span>Text</span>\n                </div>`,\n              select: true,\n              category: 'Basic',\n              content: '<div data-gjs-type=\"text\">Insert your text here</div>',\n            },\n            {\n              id: 'link',\n              label: `\n                <div>\n                  <i class=\"mdi mdi-link block-icon\" title=\"Link\" aria-hidden=\"true\"></i><br />\n                  <span>Link</span>\n                </div>\n              `,\n              select: true,\n              category: 'Basic',\n              content: `<a href=\"#\" data-gjs-type=\"link\">Link</a>`,\n            },\n            {\n              id: 'link-block',\n              label: `\n                <div>\n                  <i class=\"mdi mdi-link block-icon\" title=\"Link block\" aria-hidden=\"true\"></i><br />\n                  <span>Link Block</span>\n                </div>\n              `,\n              select: true,\n              category: 'Basic',\n              content: `\n                <a href=\"#\" data-gjs-type=\"link\" class=\"link-block\" data-gjs-droppable=\"*\" data-gjs-custom-name=\"Link block\"></a>\n                <style>\n                  .link-block {\n                    min-height: 50px;\n                    min-width: 50px;\n                    display: block;\n                  }\n                </style>`,\n            },\n            {\n              id: 'image',\n              label: `\n                <div>\n                  <i class=\"mdi mdi-image block-icon\" title=\"Image\" aria-hidden=\"true\"></i><br />\n                  <span>Image</span>\n                </div>\n              `,\n              // Select the component once it's dropped\n              select: true,\n              category: 'Basic',\n              // You can pass components as a JSON instead of a simple HTML string,\n              // in this case we also use a defined component type `image`\n              content: { type: 'image' },\n              // This triggers `active` event on dropped components and the `image`\n              // reacts by opening the AssetManager\n              activate: true,\n            },\n            {\n              id: 'video',\n              label: `\n                <div>\n                  <i class=\"mdi mdi-video block-icon\" title=\"Video\" aria-hidden=\"true\"></i><br />\n                  <span>Video</span>\n                </div>\n              `,\n              select: true,\n              category: 'Basic',\n              content: { type: 'video' },\n              activate: true,\n            },\n            {\n              id: '2-columns',\n              label: `\n                <div>\n                  <i class=\"mdi mdi-view-column block-icon\" title=\"2 column\" aria-hidden=\"true\"></i><br />\n                  <span>2 columns</span>\n                </div>\n              `,\n              select: true,\n              category: 'Basic',\n              content: `\n                <div class=\"row\" data-gjs-draggable=\"*\" data-gjs-droppable=\".col\" data-gjs-custom-name=\"Row\">\n                  <div class=\"col col-12 col-md\" data-gjs-draggable=\".row\" data-gjs-droppable=\"*\" data-gjs-custom-name=\"Column\"></div>\n                  <div class=\"col col-12 col-md\" data-gjs-draggable=\".row\" data-gjs-droppable=\"*\" data-gjs-custom-name=\"Column\"></div>\n                </div>\n              `,\n            },\n            {\n              id: 'card',\n              label: `\n                <div>\n                  <i class=\"mdi mdi-card block-icon\" title=\"Card\" aria-hidden=\"true\"></i><br />\n                  <span>Card</span>\n                </div>\n              `,\n              select: true,\n              category: 'Basic',\n              content: `\n                <div class=\"v-card v-sheet\" data-gjs-draggable=\"*\" data-gjs-droppable=\".v-card__title .v-card__text .v-card__actions\" data-gjs-custom-name=\"Card\">\n                  <div class=\"v-card__title\" data-gjs-draggable=\".v-card\" data-gjs-droppable=\"*\"><div data-gjs-type=\"text\">Card title</div></div>\n                  <div class=\"v-card__text\" data-gjs-draggable=\".v-card\" data-gjs-droppable=\"*\">\n                    <div data-gjs-type=\"text\" >Youre text here</div>\n                  </div>\n                  <div class=\"v-card__actions\" data-gjs-draggable=\".v-card\" data-gjs-droppable=\"*\">\n                    <button data-gjs-type=\"button\" type=\"button\" data-gjs-custom-name=\"Button\">Button</button>\n                  </div>\n                </div>\n              `,\n            },\n            {\n              id: 'form',\n              label: `\n                <div>\n                  <i class=\"mdi mdi-alpha-f block-icon\" title=\"Form\" aria-hidden=\"true\"></i><br />\n                  <span>Form</span>\n                </div>\n              `,\n              select: true,\n              category: 'Forms',\n              content: `\n                <form data-gjs-type=\"form\">\n                  <div class=\"row\">\n                    <div class=\"col col-12\">\n                      <div data-gjs-type=\"text\">Name</div>\n                      <input data-gjs-type=\"input\" type=\"text\" placeholder=\"Type your name here\" />\n                    </div>\n                    <div class=\"col col-12\">\n                      <div data-gjs-type=\"text\">E-mail</div>\n                      <input data-gjs-type=\"input\" type=\"email\" placeholder=\"Type your email here\" />\n                    </div>\n                    <div class=\"col col-12\">\n                      <div data-gjs-type=\"text\">Gender</div>\n                      <input data-gjs-type=\"radio\" /> M\n                      <input data-gjs-type=\"radio\" /> G\n                    </div>\n                    <div class=\"col col-12\">\n                      <button data-gjs-type=\"button\" type=\"button\" data-gjs-custom-name=\"Button\"><div data-gjs-type=\"text\">Button</div></button>\n                    </div>\n                  </div>\n                </form>\n              `,\n            },\n            {\n              id: 'input-text',\n              label: `\n                <div>\n                  <i class=\"mdi mdi-text-short block-icon\" title=\"Input\" aria-hidden=\"true\"></i><br />\n                  <span>Input</span>\n                </div>\n              `,\n              select: true,\n              category: 'Forms',\n              content: `\n                <input data-gjs-type=\"input\" type=\"text\" placeholder=\"Type your text here\" data-gjs-custom-name=\"Input\" />\n              `,\n            },\n            {\n              id: 'textarea',\n              label: `\n                <div>\n                  <i class=\"mdi mdi-card-text block-icon\" title=\"Textarea\" aria-hidden=\"true\"></i><br />\n                  <span>Textarea</span>\n                </div>\n              `,\n              select: true,\n              category: 'Forms',\n              content: `\n                <textarea data-gjs-type=\"textarea\"></textarea>\n              `,\n            },\n            {\n              id: 'input-checkbox',\n              label: `\n                <div>\n                  <i class=\"mdi mdi-checkbox-marked block-icon\" title=\"Checkbox\" aria-hidden=\"true\"></i><br />\n                  <span>Checkbox</span>\n                </div>\n              `,\n              select: true,\n              category: 'Forms',\n              content: `\n                <input data-gjs-type=\"checkbox\" type=\"checkbox\" data-gjs-custom-name=\"Checkbox\" />\n              `,\n            },\n            {\n              id: 'input-radio',\n              label: `\n                <div>\n                  <i class=\"mdi mdi-radiobox-marked block-icon\" title=\"Radio\" aria-hidden=\"true\"></i><br />\n                  <span>Radio</span>\n                </div>\n              `,\n              select: true,\n              category: 'Forms',\n              content: `\n                <input data-gjs-type=\"radio\" type=\"radio\" data-gjs-custom-name=\"Radio\" />\n              `,\n            },\n            {\n              id: 'select',\n              label: `\n                <div>\n                  <i class=\"mdi mdi-form-select block-icon\" title=\"Select\" aria-hidden=\"true\"></i><br />\n                  <span>Select</span>\n                </div>\n              `,\n              select: true,\n              category: 'Forms',\n              content: `\n                <select data-gjs-type=\"select\">\n                  <option value=\"\">Option 1</option>\n                </select>\n              `,\n            },\n            {\n              id: 'option',\n              label: `\n                <div>\n                  <i class=\"mdi mdi-format-list-bulleted block-icon\" title=\"Select\" aria-hidden=\"true\"></i><br />\n                  <span>Option</span>\n                </div>\n              `,\n              select: true,\n              category: 'Forms',\n              content: `\n                <option  data-gjs-type=\"option\" value=\"\">Option</option>\n              `,\n            },\n            {\n              id: 'button',\n              label: `\n                <div>\n                  <i class=\"mdi mdi-gesture-tap-button block-icon\" title=\"Button\" aria-hidden=\"true\"></i><br />\n                  <span>Button</span>\n                </div>\n              `,\n              select: true,\n              category: 'Forms',\n              content: `\n                <button data-gjs-type=\"button\" type=\"button\" data-gjs-custom-name=\"Button\"><div data-gjs-type=\"text\">Button</div></button>\n              `,\n            },\n          ]\n        },\n\n        layerManager: {\n          appendTo: '.layers-container'\n        },\n\n        // We define a default panel as a sidebar to contain layers\n        panels: {\n          defaults: [\n            {\n              id: 'panel-top',\n              el: '.panel__top',\n            },\n            {\n              id: 'layers',\n              el: '.panel__right',\n              // Make the panel resizable\n              resizable: {\n                // maxDim: 350,\n                minDim: 200,\n                tc: 0, // Top handler\n                cl: 1, // Left handler\n                cr: 0, // Right handler\n                bc: 0, // Bottom handler\n                // Being a flex child we need to change `flex-basis` property\n                // instead of the `width` (default)\n                keyWidth: 'flex-basis',\n              },\n            },\n            {\n              id: 'panel-switcher',\n              el: '.panel__switcher',\n              buttons: [\n                {\n                  id: 'show-layers',\n                  active: true,\n                  label: '<i class=\"mdi mdi-menu\" title=\"Layers\" aria-hidden=\"true\"></i>',\n                  command: 'show-layers',\n                  // Once activated disable the possibility to turn it off\n                  togglable: false,\n                },\n                {\n                  id: 'show-style',\n                  active: true,\n                  label: '<i class=\"mdi mdi-brush\" title=\"Styles\" aria-hidden=\"true\"></i>',\n                  command: 'show-styles',\n                  togglable: false,\n                },\n                {\n                  id: 'show-traits',\n                  active: true,\n                  label: '<i class=\"mdi mdi-cog\" title=\"Settings\" aria-hidden=\"true\"></i>',\n                  command: 'show-traits',\n                  togglable: false,\n                },\n                {\n                  id: 'show-blocks',\n                  active: true,\n                  label: '<i class=\"mdi mdi-view-grid-plus\" title=\"Blocks\" aria-hidden=\"true\"></i>',\n                  command: 'show-blocks',\n                  togglable: false,\n                }\n              ],\n            },\n            {\n              id: 'panel-devices',\n              el: '.panel__devices',\n              buttons: [\n                {\n                  id: 'device-desktop',\n                  label: '<i class=\"mdi mdi-monitor\" title=\"Desktop view\" aria-hidden=\"true\"></i>',\n                  command: 'set-device-desktop',\n                  active: true,\n                  togglable: false,\n                },\n                {\n                  id: 'device-tablet',\n                  label: '<i class=\"mdi mdi-tablet\" title=\"Tablet view\" aria-hidden=\"true\"></i>',\n                  command: 'set-device-tablet',\n                  active: true,\n                  togglable: false,\n                },\n                {\n                  id: 'device-mobile',\n                  label: '<i class=\"mdi mdi-cellphone\" title=\"Phone view\" aria-hidden=\"true\"></i>',\n                  command: 'set-device-mobile',\n                  active: true,\n                  togglable: false,\n                }\n              ],\n            },\n            {\n              id: 'basic-actions',\n              el: '.panel__basic-actions',\n              buttons: [\n                {\n                  id: 'visibility',\n                  className: 'btn-toggle-borders',\n                  label: '<i class=\"mdi mdi-checkbox-blank-outline\" title=\"Outline\" aria-hidden=\"true\"></i>',\n                  command: 'sw-visibility', // Built-in command\n                  togglable: true\n                },\n                {\n                  id: 'view',\n                  className: 'btn-open-view',\n                  label: '<i class=\"mdi mdi-eye\" title=\"Preview\" aria-hidden=\"true\"></i>',\n                  command: 'preview',\n                },\n                {\n                  id: 'export',\n                  className: 'btn-open-export',\n                  label: '<i class=\"mdi mdi-code-tags\" title=\"Code\" aria-hidden=\"true\"></i>',\n                  command: 'export-template',\n                  context: 'export-template', // For grouping context of buttons from the same panel\n                },\n                {\n                  id: 'show-json',\n                  className: 'btn-show-json',\n                  label: '<i class=\"mdi mdi-code-json\" title=\"JSON\" aria-hidden=\"true\"></i>',\n                  context: 'show-json',\n                  command(editor) {\n                    editor.Modal.setTitle('Components JSON')\n                      .setContent(`<textarea style=\"width:100%; height: 250px;\">\n                        ${JSON.stringify(editor.getComponents())}\n                      </textarea>`)\n                      .open();\n                  },\n                },\n                {\n                  id: 'undo',\n                  className: 'btn-undo',\n                  label: '<i class=\"mdi mdi-undo\" title=\"Undo\" aria-hidden=\"true\"></i>',\n                  command: 'core:undo',\n                },\n                {\n                  id: 'redo',\n                  className: 'btn-redo',\n                  label: '<i class=\"mdi mdi-redo\" title=\"Redo\" aria-hidden=\"true\"></i>',\n                  command: 'core:redo',\n                },\n                {\n                  id: 'clear',\n                  className: 'btn-clear',\n                  label: '<i class=\"mdi mdi-delete\" title=\"Clear canvas\" aria-hidden=\"true\"></i>',\n                  command(editor) {\n                    if(confirm(`Are you sure to clear the canvas?`)) editor.runCommand('core:canvas-clear')\n                  },\n                },\n                {\n                  id: 'fullScreen',\n                  className: 'btn-fullscreen',\n                  label: '<i class=\"mdi mdi-pencil-off\" title=\"Exit editor\" aria-hidden=\"true\"></i>',\n                  command: 'fullScreenEditor',\n                },\n              ],\n            }\n          ]\n        },\n        // The Selector Manager allows to assign classes and\n        // different states (eg. :hover) on components.\n        // Generally, it's used in conjunction with Style Manager\n        // but it's not mandatory\n        selectorManager: {\n          appendTo: '.styles-container'\n        },\n        styleManager: {\n          appendTo: '.styles-container',\n          sectors: [\n            {\n              name: 'General',\n              open: false,\n              buildProps: ['float', 'display', 'position', 'top', 'right', 'left', 'bottom'],\n            },\n            {\n              name: 'Dimension',\n              open: false,\n              // Use built-in properties\n              buildProps: ['width', 'height', 'min-width', 'min-height', 'max-width', 'max-height', 'padding', 'margin'],\n            },\n            {\n              name: 'Typography',\n              open: false,\n              buildProps: ['font-family', 'font-size', 'font-weight', 'letter-spacing', 'color', 'line-height', 'text-align', 'text-decoration', 'text-shadow'],\n              properties: [\n                {\n                  id: 'text-decoration',\n                  name: 'Text decoration',\n                  property: 'text-decoration',\n                  type: 'select',\n                  defaults: 'none',\n                  // List of options, available only for 'select' and 'radio'  types\n                  options: [\n                    { value: 'none', name: 'None' },\n                    { value: 'Underline', name: 'Underline' },\n                    { value: '32px', name: 'Big' },\n                  ],\n                }\n              ]\n            },\n            {\n              name: 'Decoration',\n              open: false,\n              buildProps: ['background-color', 'background', 'border', 'border-radius','opacity'],\n              properties: [\n                {\n                  name    : 'Box shadow',\n                  property  : 'box-shadow',\n                  type    : 'stack',\n                  preview   : true,\n                  // List of nested properties, available only for 'stack' and 'composite'  types\n                  properties  :\n                  [\n                    {\n                      name:     'Shadow type',\n                      // Nested properties with stack/composite type don't require proper 'property' name\n                      // as all of them will be merged to parent property, eg. box-shadow: X Y ...;\n                      property:   'shadow-type',\n                      type:     'select',\n                      defaults:   '',\n                      list:   [ { value : '', name : 'Outside', },\n                                  { value : 'inset', name : 'Inside', }],\n                    },{\n                      name:     'X position',\n                      property:   'shadow-x',\n                      type:     'integer',\n                      units:    ['px','%'],\n                      defaults :  0,\n                    },{\n                      name:     'Y position',\n                      property:   'shadow-y',\n                      type:     'integer',\n                      units:    ['px','%'],\n                      defaults :  0,\n                    },{\n                      name:     'Blur',\n                      property: 'shadow-blur',\n                      type:     'integer',\n                      units:    ['px'],\n                      defaults :  0,\n                      min:    0,\n                    },{\n                      name:     'Spread',\n                      property:   'shadow-spread',\n                      type:     'integer',\n                      units:    ['px'],\n                      defaults :  0,\n                    },{\n                      name:     'Color',\n                      property:   'shadow-color',\n                      type:     'color',\n                      defaults:   'black',\n                    },\n                  ],\n                }\n              ]\n            },\n            {\n              name: 'Flex',\n              open: false,\n              buildProps: ['flex', 'flex-basis', 'flex-direction', 'justify-content', 'align-items', 'flex-grow', 'flex-shrink', 'align-self'],\n            },\n            {\n              name: 'Extra',\n              open: false,\n              buildProps: ['transition', 'perspective', 'transform'],\n            }\n          ]\n        },\n\n        traitManager: {\n          appendTo: '.traits-container',\n        },\n\n        deviceManager: {\n          devices: [\n            {\n              name: 'Desktop',\n              width: '', // default size\n            },\n            {\n              name: 'Tablet',\n              width: '700px', // this value will be used on canvas width\n              widthMedia: '960px', // this value will be used in CSS @media\n            },\n            {\n              name: 'Mobile',\n              width: '320px', // this value will be used on canvas width\n              widthMedia: '480px', // this value will be used in CSS @media\n            }\n          ]\n        },\n      });\n      // # Init editor\n\n      // # Define commands\n      this.editor.Commands.add('show-layers', {\n        getRowEl(editor) { return editor.getContainer().closest('.editor-row'); },\n        getLayersEl(row) { return row.querySelector('.layers-container') },\n\n        run(editor) {\n          const lmEl = this.getLayersEl(this.getRowEl(editor));\n          lmEl.style.display = '';\n        },\n        stop(editor) {\n          const lmEl = this.getLayersEl(this.getRowEl(editor));\n          lmEl.style.display = 'none';\n        },\n      });\n\n      this.editor.Commands.add('show-styles', {\n        getRowEl(editor) { return editor.getContainer().closest('.editor-row'); },\n        getStyleEl(row) { return row.querySelector('.styles-container') },\n\n        run(editor) {\n          const smEl = this.getStyleEl(this.getRowEl(editor));\n          smEl.style.display = '';\n        },\n        stop(editor) {\n          const smEl = this.getStyleEl(this.getRowEl(editor));\n          smEl.style.display = 'none';\n        },\n      });\n\n      this.editor.Commands.add('show-traits', {\n        getTraitsEl(editor) {\n          const row = editor.getContainer().closest('.editor-row');\n          return row.querySelector('.traits-container');\n        },\n        run(editor) {\n          this.getTraitsEl(editor).style.display = '';\n        },\n        stop(editor) {\n          this.getTraitsEl(editor).style.display = 'none';\n        },\n      });\n\n      this.editor.Commands.add('show-blocks', {\n        getTraitsEl(editor) {\n          const row = editor.getContainer().closest('.editor-row');\n          return row.querySelector('.blocks-container');\n        },\n        run(editor) {\n          this.getTraitsEl(editor).style.display = '';\n        },\n        stop(editor) {\n          this.getTraitsEl(editor).style.display = 'none';\n        },\n      });\n\n      this.editor.Commands.add('set-device-desktop', {\n        run: editor => editor.setDevice('Desktop')\n      });\n\n      this.editor.Commands.add('set-device-tablet', {\n        run: editor => editor.setDevice('Tablet')\n      });\n\n      this.editor.Commands.add('set-device-mobile', {\n        run: editor => editor.setDevice('Mobile')\n      });\n\n      const toggleFullScreen = this.toggleFullScreen\n\n      this.editor.Commands.add('fullScreenEditor', function () {\n          toggleFullScreen()\n      });\n      // # Define commands\n\n      // # On canvas update\n      const updateHtml = this.updateHtml\n      this.editor.on('update canvas:drop', () => {\n        if(this.init) {\n          this.init = false\n        }\n        else {\n          // # Return canvas components\n          let content = null\n          if(this.editor.getHtml() !== '')\n            content = JSON.stringify({ html: this.editor.getHtml(), css: this.editor.getCss() })\n          updateHtml(content)\n          // # Return canvas components\n        }\n      }, this);\n      // # On canvas update\n\n      // # Set canvas components\n      if(value) {\n        const { html, css } = JSON.parse(value)\n        this.editor.setComponents(html)\n        this.editor.setStyle(css)\n      }\n      // # Set canvas components\n    }\n  },\n\n  mounted() {\n    this.initEditor()\n  },\n}\n</script>\n","import { render, staticRenderFns } from \"./PageEditor.vue?vue&type=template&id=c6c0d2e8&\"\nimport script from \"./PageEditor.vue?vue&type=script&lang=js&\"\nexport * from \"./PageEditor.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}